{"version":3,"sources":["pages/HomePage.js","pages/Signup.js","pages/Login.js","components/VaadNavbar.js","components/IssuesList.js","components/CommitteeDashboard.js","components/MessagesList.js","components/TenantDashboard.js","components/addIssue.js","pages/Dashboard.js","App.js","index.js"],"names":["HomePage","props","className","Image","fluid","React","Component","Signup","signUpInput","nameOfInput","value","setState","userInfo","memberObj","name","state","email","password","address","city","addUser","alert","Form","style","margin","Group","controlId","marginBottom","Label","fontSize","Control","this","type","placeholder","onChange","event","target","Button","variant","onClick","Login","updatePass","updateEmail","handleLogin","foundUser","allUsers","find","user","login","window","location","href","column","sm","VaadNavbar","activeUser","Nav","Link","signup","Dashboard","userNameToShow","logout","Container","Navbar","bg","expand","background","Brand","width","borderRadius","src","thumbnail","Toggle","aria-controls","Collapse","id","IssuesList","Accordion","defaultActiveKey","allIssues","CommitteeDashboard","handleClose","isModalOpen","saveModalInfo","newIssue","issueTitle","Title","description","Description","priority","image","committeeMemberComment","userId","editId","addIssue","removeIssue","openModal","editDescription","editTitle","editPriority","editImage","editCommitteeMemberComment","console","log","comment","commentIssue","isModalCommentOpen","handleCloseComment","saveComment","addCommentForIssue","CommitteeMemberComment","isCommentModalOpen","allIssuesJSX","map","issue","index","Card","Header","as","eventKey","Body","float","cursor","Modal","show","onHide","closeButton","Col","required","custom","marginTop","MessagesList","allMessages","TenantDashboard","handleCloseMessages","isModalOpenMessages","saveModalInfoMessage","newMessage","title","messageTitle","details","messageDetails","messagePriority","messageImage","messageEditId","addMessage","removeMessage","openModalMessage","editMessageDetails","editMessageTitle","editMessagePriority","editMessageImage","sortedIssues","sort","a","b","priorityCode","undefined","allMessagesJSX","message","selected","template","isCommitteeMember","App","newUser","concat","userObj","rowIndex","filter","v","i","addCommitteeMemberComment","indexOfComment","jsonData","issuesData","messagesData","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa564f30.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Image, Row } from 'react-bootstrap'\r\nimport './HomePage.css';\r\n\r\nclass HomePage extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"background-homepage\">\r\n               \r\n                <Image className=\"background-img\" fluid />\r\n                {/* <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididun</div> */}\r\n                  {/* <Image  style={{width: \"950px\", height: \"200px\" , borderRadius: \"50px\" }} src=\"https://i.pinimg.com/originals/84/ba/9e/84ba9e7f25805711179b64d2d623d1e0.jpg\"  /> */}\r\n                     {/* <Container>\r\n                    <Row xs={12} md={6}  lg={3} >\r\n                        <Col >\r\n                        <Image style={{  width: \"100px\"}}  src=\"https://cdn0.iconfinder.com/data/icons/real-estate-4-8/66/189-512.png\" />\r\n                        </Col>\r\n                        <Col >\r\n                        <Image style={{  width: \"100px\"}}  src=\"https://image.flaticon.com/icons/png/512/2243/2243704.png\" />\r\n                        </Col>\r\n                        <Col >\r\n                        <Image style={{  width: \"100px\"}}  src=\"https://cdn.iconscout.com/icon/premium/png-512-thumb/building-maintenance-2061267-1745776.png\" />\r\n                        </Col>\r\n                    </Row>\r\n                    </Container> */}\r\n     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HomePage","\r\nimport React from 'react';\r\nimport { Button, Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport './Signup.css';\r\n\r\nclass Signup extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        address: '',\r\n        city: '',\r\n    }\r\n} \r\n\r\n//get the inputs. the parameters from inputs are (string, event.target.value)\r\nsignUpInput = (nameOfInput,value) => {\r\n\r\n    this.setState({\r\n        [nameOfInput]: value\r\n    })\r\n    \r\n}\r\n\r\nuserInfo = () => {\r\n    //create new object to of user \r\n    const memberObj = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        address: this.state.address,\r\n        city: this.state.city,\r\n    }\r\n   \r\n    // check if inputs in obj not empty. if not add user in App\r\n    if(memberObj.name !== \"\" && memberObj.email !== \"\" && memberObj.password !== \"\" && memberObj.address !== \"\" && memberObj.city !== \"\"  ){\r\n        this.props.addUser(memberObj)\r\n    }\r\n    // add the obj to list in app\r\n    else{\r\n        alert(\"All Fields Required\");\r\n    }\r\n\r\n    //empty inputs after sign up press\r\n    this.setState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        address: '',\r\n        city: '',\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nrender(){\r\n    //get the list of registered users\r\n//    const allUsers = this.props.allUsers.map((user)=>{\r\n//        return <tr>\r\n//            <td>{user.name}</td>\r\n//            <td>{user.email}</td>\r\n//            <td>{user.password}</td>\r\n//            <td>{user.address}</td>\r\n//            <td>{user.city}</td>\r\n//        </tr>\r\n//    });\r\n\r\n    return(\r\n        <div className=\"background\">\r\n      \r\n                <Form className=\"form\">\r\n                <h1 style={{margin: \"0px 0 20px 0\"}}>Sign Up</h1>\r\n            <Form.Group controlId=\"formBasicEmail\" style={{marginBottom: \"10px\"}} >\r\n                <Form.Label style={{fontSize: \"15px\"}}>Name:</Form.Label>\r\n                <Form.Control value={this.state.name} type=\"text\" placeholder=\"Enter Name\" onChange={(event) => {this.signUpInput('name',event.target.value)}}/>\r\n\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\" style={{marginBottom: \"10px\"}}>\r\n                <Form.Label style={{fontSize: \"15px\"}}>Email Address:</Form.Label>\r\n                <Form.Control value={this.state.email} type=\"email\" placeholder=\"Enter Email\" onChange={(event) => {this.signUpInput('email',event.target.value)}}/>\r\n\r\n            </Form.Group>  <Form.Group controlId=\"formBasicEmail\" style={{marginBottom: \"10px\"}}>\r\n                <Form.Label style={{fontSize: \"15px\"}}>Password:</Form.Label>\r\n                <Form.Control value={this.state.password} type=\"Password\" placeholder=\"Password\" onChange={(event) => {this.signUpInput('password',event.target.value)}}/>\r\n\r\n            </Form.Group>  <Form.Group controlId=\"formBasicEmail\" style={{marginBottom: \"10px\"}}>\r\n                <Form.Label style={{fontSize: \"15px\"}}>Address:</Form.Label>\r\n                <Form.Control value={this.state.address} type=\"text\" placeholder=\"Address\" onChange={(event) => {this.signUpInput('address',event.target.value)}}/>\r\n\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\" style={{marginBottom: \"10px\"}}>\r\n                <Form.Label style={{fontSize: \"15px\"}}>City:</Form.Label>\r\n                <Form.Control value={this.state.city} type=\"text\" placeholder=\"City\" onChange={(event) => {this.signUpInput('city',event.target.value)}}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\" style={{marginBottom: \"10px\"}}>\r\n            </Form.Group>\r\n            <Button className=\"btn-signup\" style={{margin: \"20px 0 20px 0\"}} variant=\"primary\" type=\"button\" onClick={this.userInfo}>\r\n                Sign Up\r\n            </Button>\r\n            </Form>\r\n      \r\n            {/* <div> { {allUsers} }</div> */}\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Signup","import React from 'react';\r\nimport { Button, Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        email: '',\r\n        password:''\r\n    }\r\n}\r\n\r\nupdatePass = (event) => {\r\n    this.setState({\r\n        password: event.target.value\r\n    })\r\n}\r\nupdateEmail = (event) => {\r\n    this.setState({\r\n        email: event.target.value\r\n    })\r\n}\r\nhandleLogin = () => {\r\n\r\n    const foundUser = this.props.allUsers.find( (user) => {\r\n        return user.email === this.state.email && user.password === this.state.password;\r\n    });\r\n\r\n    if(foundUser) {\r\n        this.props.login(foundUser);\r\n        window.location.href = '/#/dashboard';\r\n    }\r\n    else{\r\n        alert(\" Incorrect Email or Password\");\r\n    }\r\n}\r\nrender(){\r\n    return(\r\n        <div className=\"p-login\" >\r\n        \r\n      {/* <Container sm={6} md={4} lg={3} className=\"img-login\">  */}\r\n     \r\n           {/* <Image  style={{width: \"10%\", height: \"100%\", opacity: \"0.5\"}} src=\"https://thumbs.dreamstime.com/b/nice-modern-apartment-buildings-city-40803762.jpg\"></Image> */}\r\n        <Form className=\"mt-5 form\">\r\n        <h1 >Login</h1>\r\n        <Form.Group style={{marginBottom: \"11px\"}}  controlId=\"formHorizontalEmail\" >\r\n            <Form.Label column sm={2}>\r\n            Email:\r\n            </Form.Label>\r\n            {/* <Col sm={10}> */}\r\n            <Form.Control  type=\"email\" placeholder=\"Email\" name=\"email\" onChange={this.updateEmail} value={this.state.email}/>\r\n            {/* </Col> */}\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{marginBottom: \"22px\"}} controlId=\"formHorizontalPassword\">\r\n            <Form.Label column sm={2}>\r\n            Password:\r\n            </Form.Label>\r\n            {/* <Col sm={10}> */}\r\n            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.updatePass} value={this.state.password}/>\r\n            {/* </Col> */}\r\n        </Form.Group>\r\n       \r\n        {/* <Form.Group> */}\r\n            {/* <Col sm={{ span: 100, offset: 0 }}> */}\r\n            <Button className=\"btn-login\" onClick={this.handleLogin} variant=\"success\" type=\"button\">\r\n                Log in\r\n            </Button>\r\n            {/* </Col> */}\r\n        {/* </Form.Group> */}\r\n        </Form>\r\n        {/* </Container> */}\r\n        {/* <Link style={{marginBottom: \"11px\"}} to=\"/signup\">Sign up</Link> */}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n\r\n","import { Container, Image, Nav, Navbar } from 'react-bootstrap';\r\nimport React from 'react'\r\n\r\n\r\n\r\nclass VaadNavbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\nrender(){\r\n    const login = ( ! this.props.activeUser) ? <Nav.Link href=\"/#/login\"><strong>Login</strong></Nav.Link> : null\r\n    const signup = ( ! this.props.activeUser ) ? <Nav.Link href=\"/#/signup\"><strong>Signup</strong></Nav.Link> : null\r\n    const Dashboard = (  this.props.activeUser) ? <Nav.Link href=\"/#/dashboard\"><strong>Dashboard</strong></Nav.Link> : null\r\n\r\n    const userNameToShow = (  this.props.activeUser ) ? <Nav.Link> Hello {this.props.activeUser.name}</Nav.Link> : null\r\n    const logout = (this.props.activeUser) ? <Nav.Link href=\"/#/login/\" onClick={ () => this.props.logout()}><strong>Log out</strong></Nav.Link> : null\r\n  \r\n    return(\r\n        <Container >\r\n        <Navbar bg=\"light\" expand=\"lg\" style={{background: \"linear-gradient(180deg, rgba(42,139,219,1) 28%, rgba(232,232,232,1) 93%)\"}}>\r\n            <Navbar.Brand href=\"/#/\" style={{width: \"77px\"}}><Image style={{width: \"77px\", borderRadius:\"50%\"}} src=\"https://i.pinimg.com/736x/93/1d/6b/931d6b0f3e13feb6c8e3825f8e0ec3d8.jpg\" thumbnail /></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/#/\"><strong>Home</strong></Nav.Link>\r\n                {Dashboard}\r\n            </Nav>\r\n            <Nav className=\"ml-auto\">\r\n                 {/* <Nav.Link href=\"/#/login\">Login</Nav.Link>\r\n                <Nav.Link href=\"/#/Signup\">Signup</Nav.Link>  */}\r\n                {login}\r\n                {signup}\r\n                {userNameToShow}\r\n                {logout}\r\n            </Nav>\r\n                \r\n            </Navbar.Collapse>\r\n      </Navbar>\r\n      </Container>\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nexport default VaadNavbar","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\n\r\n// this component is for viewing all issues\r\nclass IssuesList extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n\r\n    \r\n} \r\n\r\nrender(){\r\n\r\n    return(\r\n        <div>\r\n        <Accordion defaultActiveKey=\"0\">\r\n             {this.props.allIssues} \r\n        </Accordion>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default IssuesList\r\n\r\n\r\n  ","\r\nimport React from 'react';\r\nimport { Accordion, Card, Button, Modal, Row, Col, Form } from 'react-bootstrap';\r\nimport IssuesList from './IssuesList';\r\n\r\n\r\n\r\nclass CommitteeDashboard extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          // show: false,\r\n          // newTenantIssue: issueInfo\r\n          isModalOpen: false,\r\n          isCommentModalOpen: false,\r\n          editId: -1,\r\n          // issueTitle: '',\r\n          // issueDescription: '',\r\n          Title: '',\r\n          Description: '',\r\n          // default priority set to normal\r\n          priority:'Normal',\r\n          image: null,\r\n          committeeMemberComment:\"\"\r\n        }\r\n    }\r\n\r\n    handleClose = () =>{\r\n      this.setState({\r\n          isModalOpen: false,\r\n      })\r\n    }\r\n    \r\n    saveModalInfo = () =>{\r\n \r\n      let newIssue = {\r\n        issueTitle: this.state.Title,\r\n        description: this.state.Description,\r\n        priority: this.state.priority,\r\n        image: this.state.image,\r\n        committeeMemberComment:this.state.committeeMemberComment,\r\n        userId: this.props.activeUser.id,\r\n      }\r\n   \r\n      const editId = this.state.editId;\r\n      this.setState({\r\n        isModalOpen: false,\r\n        Title: \"\",\r\n        Description: \"\",\r\n        priority: \"Normal\",\r\n        image: \"\",\r\n        committeeMemberComment: \"\",\r\n      });\r\n\r\n      if( newIssue.issueTitle &&  newIssue.description){ \r\n        // passing editId to App.js\r\n        // console.log(newIssue,editId);\r\n\r\n        this.props.addIssue(newIssue, editId);\r\n      }\r\n\r\n    }\r\n    \r\n    // pass id from remove issue to \r\n    removeIssue = (id) => {\r\n      this.props.removeIssue(id);\r\n    }\r\n\r\n    // when open modal clicking add issue id will be -1\r\n    openModal = (id) => {\r\n      // if id (index from map) will not receive value (clicking add issue  onClick={this.openModal}) it will be equal to -1\r\n      if ( typeof id === \"undefined\" ){\r\n        id = -1;\r\n      }\r\n      // create empty strings variable\r\n    // create empty strings variable\r\n    let editDescription = \"\";\r\n    let editTitle = \"\";\r\n    let editPriority = \"\";\r\n    let editImage = \"\";\r\n    let editCommitteeMemberComment = \"\";\r\n      //check id received from map array. get issues by their id and \r\n      if (id > -1) {\r\n        editDescription = this.props.allIssues[id].description;\r\n        editTitle = this.props.allIssues[id].issueTitle;\r\n        editPriority = this.props.allIssues[id].priority;\r\n        editImage = this.props.allIssues[id].image;\r\n        editCommitteeMemberComment = this.props.allIssues[id].editCommitteeMemberComment;\r\n      // else leave vars empty\r\n    } else {\r\n      editDescription = \"\";\r\n      editTitle = \"\";\r\n        //set priority state to default -Normal-\r\n      editPriority= this.state.priority;\r\n      editImage = \"\";\r\n      editCommitteeMemberComment = \"\";\r\n    }\r\n     //change modal state to open it.\r\n        this.setState({\r\n          isModalOpen: true,\r\n        })\r\n  // update state and edit existing issues\r\n      console.log(\"this is the title:\", editTitle);\r\n      this.setState({\r\n        editId: id,\r\n        Title: editTitle,\r\n        Description: editDescription,\r\n        priority: editPriority,\r\n        image: editImage,\r\n        comment: editCommitteeMemberComment\r\n         \r\n      });\r\n    \r\n    }\r\n    commentIssue = (id) => {\r\n      this.setState({\r\n        isModalCommentOpen: true,\r\n        editId: id\r\n      });\r\n\r\n    }\r\n\r\n    handleCloseComment = () => {\r\n      this.setState({ isModalCommentOpen: false });\r\n\r\n    }\r\n    saveComment = () => {\r\n   \r\n      this.props.addCommentForIssue( this.state.CommitteeMemberComment, this.state.editId);\r\n    }\r\n\r\n      \r\n    \r\n\r\nrender(){\r\n    // get the name of activeUser to show as h1\r\n    const activeUser = this.props.activeUser.name;\r\n\r\n    const allIssuesJSX = this.props.allIssues.map((issue,index) => {\r\n        return (\r\n          // id from  issues json object\r\n            <Card key={issue.id}>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        { issue.issueTitle}   \r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n        \r\n        <p>Description: {issue.description}</p> \r\n        \r\n        <p>Priority: {issue.priority}</p>\r\n        \r\n        <img src={issue.image}/>\r\n\r\n        { (issue.userId === this.props.activeUser.id) ? ( \r\n          // conditional ternary on button to show button only by user id\r\n          <div>\r\n        <Button\r\n        style={{float:\"right\", cursor:\"pointer\"}}\r\n        onClick={() => this.openModal(index)}>\r\n          Edit\r\n        </Button>\r\n        <Button\r\n        variant=\"danger\"\r\n        style={{float:\"right\", cursor:\"pointer\"}}\r\n        onClick={() => {   this.removeIssue(index); }}>\r\n          Remove\r\n        </Button>\r\n        </div>\r\n           ) :  (\r\n            <div>\r\n            <Button\r\n          variant=\"success\"\r\n          style={{float:\"right\", cursor:\"pointer\"}}\r\n          onClick={() => {   this.commentIssue(index); }}>\r\n            Comment\r\n          </Button>\r\n            </div>\r\n           )}\r\n  \r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n         </Card>\r\n         \r\n        )\r\n    } )\r\n\r\n    return (\r\n        <div>\r\n           <h1> {activeUser} </h1>\r\n           <h1>Issues</h1>\r\n      <IssuesList allIssues={allIssuesJSX}></IssuesList>\r\n      <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.editId > -1 ? `Edit Issue #${this.state.editId +1 }` : \"Add Issue\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            {/* <Form.Group as={Row} > */}\r\n                <Form.Label column sm={2}>\r\n                Issue:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                    <Form.Control \r\n                    required={true}\r\n                    type=\"text\" \r\n                    placeholder= \"Issue Title\"\r\n                     value={this.state.Title}\r\n                     onChange={(event)=> {this.setState({Title: event.target.value})}}\r\n                      />\r\n                \r\n                </Col>\r\n\r\n                <Form.Label column sm={2}>\r\n                Description:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                  <Form.Control  \r\n                   required={true} \r\n                    type=\"text\" \r\n                    placeholder=\"description\"\r\n                    value={this.state.Description}\r\n                    onChange={(event)=> {this.setState({Description: event.target.value})}}\r\n                  />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                    Priority:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                <Form.Control   required={true}  value={this.state.priority} as=\"select\" custom   onChange={(event)=> {this.setState({priority: event.target.value})}}>\r\n                    <option value=\"Normal\">Normal</option>\r\n                    <option value=\"Important\">Important</option>\r\n                    <option value=\"Urgent\">Urgent</option>\r\n                 </Form.Control>\r\n                </Col>\r\n                <Col sm={10}>\r\n                <Form.Label column sm={2}>\r\n                    Image:\r\n                </Form.Label>\r\n                <Form.Control  \r\n                 value={this.state.image}\r\n                 type=\"text\"\r\n                 onChange={(event)=> {this.setState({image: event.target.value})}}>\r\n                 </Form.Control>\r\n                </Col>\r\n       \r\n             \r\n            \r\n            {/* </Form.Group> */}\r\n                                                \r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button style={{margin: \"14px\"}} variant=\"primary\" onClick={() =>  {  this.saveModalInfo() }}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n        <Modal show={this.state.isModalCommentOpen} onHide={this.handleCloseComment}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Add Comment</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            {/* <Form.Group as={Row} > */}\r\n                <Form.Label column sm={2}>\r\n                Comment:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                    <Form.Control \r\n                    required={true}\r\n                    type=\"text\" \r\n                    placeholder= \"Comment\"\r\n                     value={this.state.committeeMemberComment}\r\n                     onChange={(event)=> {this.setState({committeeMemberComment: event.target.value})}}\r\n                      />\r\n                </Col>\r\n            {/* </Form.Group> */}\r\n                                                \r\n            <Button variant=\"secondary\" onClick={this.handleCloseComment}>\r\n                Close\r\n            </Button>\r\n            <Button style={{margin: \"14px\"}} variant=\"primary\" onClick={() =>  {  this.saveComment() }}>   \r\n                Save Comment\r\n            </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n            <Button style={{marginTop: \"22px\", marginBottom: \"22px\"}} variant=\"secondary\" onClick={this.openModal} >\r\n                Add Issue\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\nexport default CommitteeDashboard","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\n\r\n// this component is for viewing all messages list\r\nclass MessagesList extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n\r\n    \r\n} \r\n\r\nrender(){\r\n\r\n    return(\r\n        <div>\r\n        <Accordion defaultActiveKey=\"0\">\r\n             {this.props.allMessages} \r\n        </Accordion>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default MessagesList\r\n","import './tenantDashboard.css';\r\nimport React from 'react';\r\nimport { Accordion, Card, Button, Modal, Row, Col, Form } from 'react-bootstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport IssuesList from './IssuesList';\r\nimport MessagesList from './MessagesList'\r\nimport AddIssue from './addIssue';\r\n\r\n\r\n\r\nclass TenantDashboard extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          // show: false,\r\n          isModalOpen: false,\r\n          editId: -1,\r\n          // issueTitle: '',\r\n          // issueDescription: '',\r\n          Title: '',\r\n          Description: '',\r\n          // default priority set to normal\r\n          priority:'Normal',\r\n          image: null,\r\n          \r\n\r\n          isModalOpenMessages: false,\r\n          messageEditId: -1,\r\n          messageTitle: \"\",\r\n          messageDetails: \"\",\r\n            // default priority set to Info\r\n          messagePriority: \"Info\",\r\n          messageImage: null,\r\n\r\n          priorityCode:\"\",\r\n        }\r\n    }\r\n\r\n    handleClose = () =>{\r\n      this.setState({\r\n          isModalOpen: false,\r\n      })\r\n    }\r\n    handleCloseMessages = () =>{\r\n      this.setState({\r\n        isModalOpenMessages: false,\r\n      })\r\n    }\r\n\r\n   //have to use different functions for modal. one for issue and one for message\r\n    saveModalInfoMessage = () => {\r\n      let newMessage = {\r\n        title: this.state.messageTitle,\r\n        details: this.state.messageDetails,\r\n        priority: this.state.messagePriority,\r\n        image: this.state.messageImage,\r\n        userId: this.props.activeUser.id,\r\n      }\r\n      // console.log(newMessage);\r\n      const messageEditId = this.state.messageEditId;\r\n      this.setState({\r\n        isModalOpenMessages: false,\r\n          messageTitle: \"\",\r\n          messageDetails: \"\",\r\n          messagePriority: \"Info\",\r\n          messageImage: \"\",  \r\n      });\r\n      \r\n      // same for messages \r\n      if( newMessage.title &&  newMessage.details && newMessage.priority){ \r\n        // passing editId to App.js\r\n        console.log(newMessage);\r\n      this.props.addMessage(newMessage, messageEditId);\r\n      }\r\n    } \r\n    // pass id from removeMessage  to App\r\n    removeMessage = (id) => {\r\n      this.props.removeMessage(id);\r\n    }\r\n\r\n    saveModalInfo = () =>{\r\n      //json keys: current state value in component\r\n      let newIssue = {\r\n        issueTitle: this.state.Title,\r\n        description: this.state.Description,\r\n        priority: this.state.priority,\r\n        image: this.state.image,\r\n        userId: this.props.activeUser.id,\r\n      }\r\n\r\n  \r\n      const editId = this.state.editId;\r\n      this.setState({\r\n        isModalOpen: false,\r\n        Title: \"\",\r\n        Description: \"\",\r\n        priority: \"Normal\",\r\n        image: \"\",\r\n       \r\n      });\r\n\r\n\r\n      //if: check if  newIssue.issueTitle  newIssue.description   newIssue.priority  exists\r\n      if( newIssue.issueTitle &&  newIssue.description){ \r\n        // passing editId to App.js\r\n      this.props.addIssue(newIssue, editId);\r\n      }\r\n\r\n    }\r\n    \r\n    // pass id from remove issue to \r\n    removeIssue = (id) => {\r\n      this.props.removeIssue(id);\r\n    }\r\n\r\n\r\n    // when open modal clicking add issue id will be -1\r\n    openModal = (id) => {\r\n      // if id (index from map) will not receive value (clicking add issue  onClick={this.openModal}) it will be equal to -1\r\n      if ( typeof id === \"undefined\" ){\r\n        id = -1;\r\n      }\r\n      // create empty strings variable\r\n      let editDescription = \"\";\r\n      let editTitle = \"\";\r\n      let editPriority = \"\";\r\n      let editImage = \"\";\r\n      let editCommitteeMemberComment = \"\";\r\n      //check id received from map array. get issues by their id \r\n      if (id > -1) {\r\n        editDescription = this.props.allIssues[id].description;\r\n        editTitle = this.props.allIssues[id].issueTitle;\r\n        editPriority = this.props.allIssues[id].priority;\r\n        editImage = this.props.allIssues[id].image;\r\n        editCommitteeMemberComment = this.props.allIssues[id].editCommitteeMemberComment;\r\n      // else leave vars empty\r\n      } else {\r\n        editDescription = \"\";\r\n        editTitle = \"\";\r\n        editPriority= this.state.priority;\r\n        editImage = \"\";\r\n        editCommitteeMemberComment = \"\";\r\n      }\r\n     //change modal state to open it.\r\n        this.setState({\r\n          isModalOpen: true,\r\n        })\r\n  // update state and edit existing issues\r\n      console.log(\"this is the title:\", editTitle);\r\n      this.setState({\r\n         editId: id,\r\n         Title: editTitle,\r\n         Description: editDescription,\r\n         priority: editPriority,\r\n         image: editImage,\r\n         comment: editCommitteeMemberComment\r\n       \r\n      });\r\n      \r\n    }\r\n\r\n     \r\n\r\n    // when open modal clicking add issue id will be -1\r\n    openModalMessage = (id) => {\r\n      // if id (index from map) will not receive value (clicking add issue  onClick={this.openModal}) it will be equal to -1\r\n      if ( typeof id === \"undefined\" ){\r\n        id = -1;\r\n      }\r\n\r\n        // create empty strings variable\r\n        let editMessageDetails = \"\";\r\n        let editMessageTitle = \"\";\r\n        let editMessagePriority = \"\";\r\n        let editMessageImage = \"\";\r\n       \r\n        //check id received from map array. get issues by their id \r\n        if (id > -1) {\r\n          editMessageDetails = this.props.allMessages[id].details;\r\n          editMessageTitle = this.props.allMessages[id].title;\r\n          editMessagePriority = this.props.allMessages[id].priority;\r\n          editMessageImage = this.props.allMessages[id].image;\r\n  \r\n        // else leave vars empty\r\n        } else {\r\n          editMessageDetails = \"\";\r\n          editMessageTitle = \"\";\r\n          editMessagePriority= this.state.messagePriority;\r\n          editMessageImage = \"\";\r\n     \r\n        }\r\n       //change modal state to open it.\r\n          this.setState({\r\n            isModalOpenMessages: true,\r\n          })\r\n    // update state and edit existing message\r\n\r\n        this.setState({\r\n          messageEditId: id,\r\n          messageTitle: editMessageTitle,\r\n          messageDetails: editMessageDetails,\r\n          messagePriority: editMessagePriority,\r\n          messageImage: editMessageImage,\r\n         \r\n        });\r\n    }\r\n\r\n    sortedIssues = (event) => {\r\n\r\n        console.log(event);\r\n      if(event === \"Priority\"){\r\n        \r\n          this.setState({\r\n            sortedIssues :  this.props.allIssues.sort((a,b)=> b.priorityCode-a.priorityCode) \r\n          }) \r\n      }\r\n  }\r\n    \r\nrender(){\r\n  // get the name of activeUser to show as h1\r\n    const activeUser = this.props.activeUser.name;\r\n// map to get the list of all issues\r\n    const allIssuesJSX = this.props.allIssues.map((issue,index) => {\r\n        return (\r\n          // id from  issues json object\r\n            <Card key={issue.id}>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        {   issue.issueTitle  }   \r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n        \r\n        <p>Description: {issue.description}</p> \r\n        \r\n        <p>Priority: {issue.priority}</p>\r\n        \r\n        <img src={issue.image}/>\r\n        \r\n        <p>Committee Member Comment: {issue.committeeMemberComment}</p>\r\n\r\n        { (issue.userId === this.props.activeUser.id) ? ( \r\n          <div>\r\n        <Button \r\n        className=\"btn-tenant-dash\"\r\n        style={{float:\"right\", cursor:\"pointer\"}}\r\n        onClick={() => this.openModal(index)}>\r\n          Edit\r\n        </Button>\r\n        <Button\r\n        className=\"btn-tenant-dash\"\r\n        variant=\"danger\"\r\n        style={{float:\"right\", cursor:\"pointer\"}}\r\n        onClick={() => {   this.removeIssue(index); }}>\r\n          Remove\r\n        </Button>\r\n        </div>\r\n           ) :  undefined }\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n         </Card>\r\n         \r\n        )\r\n    } )\r\nconsole.log(this.props.allMessages);\r\n    const allMessagesJSX = this.props.allMessages.map((message,index) => {\r\n      return (\r\n        // id from  issues json object\r\n          <Card key={message.id}>\r\n  <Card.Header>\r\n    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n      {   message.title  }   \r\n    </Accordion.Toggle>\r\n  </Card.Header>\r\n  <Accordion.Collapse eventKey=\"1\">\r\n    <Card.Body>\r\n      \r\n      <p>Details: {message.details}</p> \r\n      \r\n      <p>Priority: {message.priority}</p>\r\n      \r\n      <img src={message.image}/>\r\n      \r\n      { (message.userId === this.props.activeUser.id) ? ( \r\n        <div>\r\n      <Button\r\n      className=\"btn-tenant-dash\"\r\n      style={{float:\"right\", cursor:\"pointer\"}}\r\n      onClick={() => this.openModalMessage(index)}>\r\n        Edit\r\n      </Button>\r\n      <Button\r\n      className=\"btn-tenant-dash\"\r\n      variant=\"danger\"\r\n      style={{float:\"right\", cursor:\"pointer\"}}\r\n      onClick={() => { this.removeMessage(index) }}>\r\n        Remove\r\n      </Button>\r\n      </div>\r\n         ) :  undefined }\r\n    </Card.Body>\r\n  </Accordion.Collapse>\r\n       </Card>\r\n       \r\n      )\r\n  } )\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"tenant-frame\"> \r\n         <h1> {activeUser} </h1>\r\n         <h2>Issues</h2>\r\n      \r\n                    <select onChange={(event) =>  {this.sortedIssues(event.target.value)}}>\r\n                        <option selected >Sort By</option>\r\n                        <option value=\"Date\">Date</option>\r\n                        <option value=\"Priority\">Priority</option>\r\n                    </select>\r\n              \r\n                 <IssuesList allIssues={allIssuesJSX}></IssuesList>\r\n\r\n        <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.editId > -1 ? `Edit Issue #${this.state.editId +1 }` : \"Add Issue\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            {/* <Form.Group as={Row} > */}\r\n                <Form.Label column sm={2}>\r\n                Issue:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                    <Form.Control \r\n                    required={true}\r\n                    type=\"text\" \r\n                    placeholder= \"Issue Title\"\r\n                     value={this.state.Title}\r\n                     onChange={(event)=> {this.setState({Title: event.target.value})}}\r\n                      />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                Description:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control  \r\n                   required={true} \r\n                    type=\"text\" \r\n                    placeholder=\"description\"\r\n                    value={this.state.Description}\r\n                    onChange={(event)=> {this.setState({Description: event.target.value})}}\r\n                  />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                    Priority:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                <Form.Control \r\n                required={true}\r\n                  value={this.state.priority}\r\n                   as=\"select\" custom\r\n                   onChange={(event)=> {this.setState({priority: event.target.value})}}>\r\n                    <option value=\"Normal\">Normal</option>\r\n                    <option value=\"Important\">Important</option>\r\n                    <option value=\"Urgent\">Urgent</option>\r\n                 </Form.Control>\r\n                </Col>\r\n                <Col sm={10}>\r\n                <Form.Label column sm={2}>\r\n                    Image:\r\n                </Form.Label>\r\n                <Form.Control  \r\n                 value={this.state.image}\r\n                 type=\"text\"\r\n                 onChange={(event)=> {this.setState({image: event.target.value})}}>\r\n                 </Form.Control>\r\n                </Col>\r\n       \r\n             \r\n            \r\n            {/* </Form.Group> */}\r\n                                                \r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button style={{margin: \"14px\"}} variant=\"primary\" onClick={() =>  {  this.saveModalInfo() }}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n            <Button style={{marginTop: \"22px\", marginBottom: \"22px\"}} variant=\"secondary\" onClick={() => { this.openModal() } } >\r\n                Add Issue\r\n            </Button>\r\n     \r\n\r\n          {/* optional to render. from another component */}\r\n            {/* <AddIssue             \r\n              allIssues={this.props.allIssues}\r\n              addIssue={this.props.addIssue}\r\n              removeIssue={this.props.removeIssue}\r\n              activeUser={this.props.activeUser}\r\n              allMessages={this.props.allMessages}\r\n              addMessage={this.props.addMessage}\r\n              removeMessage={this.props.removeMessage}\r\n            >\r\n            </AddIssue>\r\n */}\r\n\r\n\r\n\r\n                      <h1> {activeUser} </h1>\r\n                       <h2>Messages</h2>\r\n      \r\n                 <MessagesList allMessages={allMessagesJSX}></MessagesList>\r\n\r\n        <Modal show={this.state.isModalOpenMessages} onHide={this.handleCloseMessages}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.messageEditId > -1 ? `Edit Message #${this.state.messageEditId +1 }` : \"Add Message\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n        \r\n                <Form.Label column sm={2}>\r\n                Issue:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                    <Form.Control \r\n                    required={true}\r\n                    type=\"text\" \r\n                    placeholder= \"Message Title\"\r\n                     value={this.state.messageTitle}\r\n                     onChange={(event)=> {this.setState({messageTitle: event.target.value})}}\r\n                      />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                  Details:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control  \r\n                   required={true} \r\n                    type=\"text\" \r\n                    placeholder=\"Details\"\r\n                    value={this.state.messageDetails}\r\n                    onChange={(event)=> {this.setState({messageDetails: event.target.value})}}\r\n                  />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                    Priority:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                <Form.Control required={true}  value={this.state.messagePriority} as=\"select\" custom   onChange={(event)=> {this.setState({messagePriority: event.target.value})}}>\r\n                    <option value=\"Info\">Info</option>\r\n                    <option value=\"Important\">Important</option>\r\n                 </Form.Control>\r\n                </Col>\r\n                <Col sm={10}>\r\n                <Form.Label column sm={2}>\r\n                    Image:\r\n                </Form.Label>\r\n                <Form.Control  \r\n                 value={this.state.messageImage}\r\n                 type=\"text\"\r\n                 onChange={(event)=> {this.setState({messageImage: event.target.value})}}>\r\n                 </Form.Control>\r\n                </Col>\r\n       \r\n             \r\n            \r\n    \r\n                                                \r\n            <Button variant=\"secondary\" onClick={this.handleCloseMessages}>\r\n                Close\r\n            </Button>\r\n            <Button style={{margin: \"14px\"}} variant=\"primary\" onClick={() =>  {  this.saveModalInfoMessage() }}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n            <Button style={{marginTop: \"22px\", marginBottom: \"22px\"}} variant=\"secondary\" onClick={this.openModalMessage} >\r\n                Add Message\r\n            </Button>\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default TenantDashboard\r\n\r\n\r\n\r\n\r\n","import { Accordion, Card, Button, Modal, Row, Col, Form } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport IssuesList from './IssuesList';\r\n\r\n\r\nclass AddIssue extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          isModalOpen: false,\r\n          editId: -1,\r\n          issueTitle: '',\r\n          // issueDescription: '',\r\n          Title: '',\r\n          Description: '',\r\n          // default priority set to normal\r\n          priority:'Normal',\r\n          image: null,\r\n        }\r\n    }\r\n\r\n\r\n    handleClose = () =>{\r\n      this.setState({\r\n          isModalOpen: false,\r\n      })\r\n    }\r\n \r\n    saveModalInfo = () =>{\r\n      //json keys: current state value in component\r\n      let newIssue = {\r\n        issueTitle: this.state.Title,\r\n        description: this.state.Description,\r\n        priority: this.state.priority,\r\n        image: this.state.image,\r\n        userId: this.props.activeUser.id,\r\n      }\r\n\r\n  \r\n      const editId = this.state.editId;\r\n      this.setState({\r\n        isModalOpen: false,\r\n        Title: \"\",\r\n        Description: \"\",\r\n        priority: \"Normal\",\r\n        image: \"\",\r\n       \r\n      });\r\n\r\n\r\n      //if: check if  newIssue.issueTitle  newIssue.description   newIssue.priority  exists\r\n      if( newIssue.issueTitle &&  newIssue.description){ \r\n        // passing editId to App.js\r\n      this.props.addIssue(newIssue, editId);\r\n      }\r\n\r\n    }\r\n    \r\n    // pass id from remove issue to \r\n    removeIssue = (id) => {\r\n      this.props.removeIssue(id);\r\n    }\r\n\r\n\r\n    // when open modal clicking add issue id will be -1\r\n    openModal = (id) => {\r\n      // if id (index from map) will not receive value (clicking add issue  onClick={this.openModal}) it will be equal to -1\r\n      if ( typeof id === \"undefined\" ){\r\n        id = -1;\r\n      }\r\n      // create empty strings variable\r\n      let editDescription = \"\";\r\n      let editTitle = \"\";\r\n      let editPriority = \"\";\r\n      let editImage = \"\";\r\n      let editCommitteeMemberComment = \"\";\r\n      //check id received from map array. get issues by their id \r\n      if (id > -1) {\r\n        editDescription = this.props.allIssues[id].description;\r\n        editTitle = this.props.allIssues[id].issueTitle;\r\n        editPriority = this.props.allIssues[id].priority;\r\n        editImage = this.props.allIssues[id].image;\r\n        editCommitteeMemberComment = this.props.allIssues[id].editCommitteeMemberComment;\r\n      // else leave vars empty\r\n      } else {\r\n        editDescription = \"\";\r\n        editTitle = \"\";\r\n        editPriority= this.state.priority;\r\n        editImage = \"\";\r\n        editCommitteeMemberComment = \"\";\r\n      }\r\n     //change modal state to open it.\r\n        this.setState({\r\n          isModalOpen: true,\r\n        })\r\n  // update state and edit existing issues\r\n      console.log(\"this is the title:\", editTitle);\r\n      this.setState({\r\n         editId: id,\r\n         Title: editTitle,\r\n         Description: editDescription,\r\n         priority: editPriority,\r\n         image: editImage,\r\n         comment: editCommitteeMemberComment\r\n       \r\n      });\r\n    \r\n    }\r\n\r\n    \r\nrender(){\r\n // get the name of activeUser to show as h1\r\n const activeUser = this.props.activeUser.name;\r\n // map to get the list of all issues\r\n     const allIssuesJSX = this.props.allIssues.map((issue,index) => {\r\n         return (\r\n           // id from  issues json object\r\n             <Card key={issue.id}>\r\n     <Card.Header>\r\n       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n         {   issue.issueTitle  }   \r\n       </Accordion.Toggle>\r\n     </Card.Header>\r\n     <Accordion.Collapse eventKey=\"1\">\r\n       <Card.Body>\r\n         \r\n         <p>Description: {issue.description}</p> \r\n         \r\n         <p>Priority: {issue.priority}</p>\r\n         \r\n         <img src={issue.image}/>\r\n         \r\n         { (issue.userId === this.props.activeUser.id) ? ( \r\n           <div>\r\n         <Button \r\n         className=\"btn-tenant-dash\"\r\n         style={{float:\"right\", cursor:\"pointer\"}}\r\n         onClick={() => this.openModal(index)}>\r\n           Edit\r\n         </Button>\r\n         <Button\r\n         className=\"btn-tenant-dash\"\r\n         variant=\"danger\"\r\n         style={{float:\"right\", cursor:\"pointer\"}}\r\n         onClick={() => {   this.removeIssue(index); }}>\r\n           Remove\r\n         </Button>\r\n         </div>\r\n            ) :  undefined }\r\n       </Card.Body>\r\n     </Accordion.Collapse>\r\n          </Card>\r\n          \r\n         )\r\n     } )\r\n    return (\r\n        <div> \r\n     <h1> {activeUser} </h1>\r\n         <h2>Issues</h2>\r\n      \r\n                 <IssuesList allIssues={allIssuesJSX}></IssuesList>\r\n\r\n        <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.editId > -1 ? `Edit Issue #${this.state.editId +1 }` : \"Add Issue\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            {/* <Form.Group as={Row} > */}\r\n                <Form.Label column sm={2}>\r\n                Issue:\r\n                </Form.Label>\r\n                <Col sm={10} >\r\n                    <Form.Control \r\n                    required={true}\r\n                    type=\"text\" \r\n                    placeholder= \"Issue Title\"\r\n                     value={this.state.Title}\r\n                     onChange={(event)=> {this.setState({Title: event.target.value})}}\r\n                      />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                Description:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control  \r\n                   required={true} \r\n                    type=\"text\" \r\n                    placeholder=\"description\"\r\n                    value={this.state.Description}\r\n                    onChange={(event)=> {this.setState({Description: event.target.value})}}\r\n                  />\r\n                </Col>\r\n                <Form.Label column sm={2}>\r\n                    Priority:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                <Form.Control \r\n                required={true}\r\n                  value={this.state.priority}\r\n                   as=\"select\" custom\r\n                   onChange={(event)=> {this.setState({priority: event.target.value})}}>\r\n                    <option value=\"Normal\">Normal</option>\r\n                    <option value=\"Important\">Important</option>\r\n                    <option value=\"Urgent\">Urgent</option>\r\n                 </Form.Control>\r\n                </Col>\r\n                <Col sm={10}>\r\n                <Form.Label column sm={2}>\r\n                    Image:\r\n                </Form.Label>\r\n                <Form.Control  \r\n                 value={this.state.image}\r\n                 type=\"text\"\r\n                 onChange={(event)=> {this.setState({image: event.target.value})}}>\r\n                 </Form.Control>\r\n                </Col>\r\n       \r\n             \r\n            \r\n            {/* </Form.Group> */}\r\n                                                \r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button style={{margin: \"14px\"}} variant=\"primary\" onClick={() =>  {  this.saveModalInfo() }}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n            <Button style={{marginTop: \"22px\", marginBottom: \"22px\"}} variant=\"secondary\" onClick={this.openModal} >\r\n                Add Issue\r\n            </Button>\r\n     \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default AddIssue\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport CommitteeDashboard from '../components/CommitteeDashboard';\r\nimport TenantDashboard from '../components/TenantDashboard';\r\n// import SortedIssues from \"../components/SortedIssues\"\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allIssues:'',\r\n            // allIssues: props.allIssues,\r\n            //issues object from json comes to this function as props in state. do not use it !!\r\n    }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.activeUser) {\r\n            window.location.href = '#/login';\r\n        }\r\n    }\r\n    // sortedIssuesFunc=(sortType)=> {\r\n//sortType is parameter from from Sortedissues.jsx \r\n        // let sortedIssues;\r\n        // if(sortType===\"priority\"){  check if parameter sortType equals string \"priority\"\r\n            // sortedIssues=this.state.allIssues.sort((a,b)=> b.priorityCode-a.priorityCode) \r\n        // }  // sort by priorityCode (key from issues.json). have to sort by numbers (priorityCode is a number). could not sort by alphabet\r\n        \r\n        // this.setState({allIssues:sortedIssues})\r\n        // change the state. return a mutation of the object array as a sorted one. no need to return the allIssues object to parent (App.js) and save it to json (or other data base), because it is only for temporary rendering.\r\n        // console.log(\"from dashboard, type is\", sortType);\r\n        // console.log(this.props.allIssues);\r\n        // console.log(this.state.allIssues);\r\n    // }\r\n \r\n     \r\n\r\n    render() {\r\n        // check if activeUser exists. if not redirect to login\r\n        /*if(this.props.activeUser == null){ \r\n            //if not move to login page\r\n            window.location.href = '/#/login';\r\n            return <div></div>;\r\n        }*/\r\n\r\n        let template = '';\r\n        // check if activeUser is a committee memeber. if true render CommitteeDashboard component, else render TenantDashboard component\r\n        if (this.props.activeUser && this.props.activeUser.isCommitteeMember) {\r\n\r\n            template = <CommitteeDashboard\r\n                allIssues={this.props.allIssues}\r\n                addIssue={this.props.addIssue}\r\n                removeIssue={this.props.removeIssue}\r\n                activeUser={this.props.activeUser}\r\n                allMessages={this.props.allMessages}\r\n                removeMessage={this.props.removeMessage}\r\n            ></CommitteeDashboard>\r\n        }\r\n        else if (this.props.activeUser) {\r\n            template = <TenantDashboard\r\n                allIssues={this.props.allIssues}\r\n                addIssue={this.props.addIssue}\r\n                removeIssue={this.props.removeIssue}\r\n                activeUser={this.props.activeUser}\r\n                allMessages={this.props.allMessages}\r\n                addMessage={this.props.addMessage}\r\n                removeMessage={this.props.removeMessage}\r\n            >\r\n            </TenantDashboard>\r\n        }\r\n        return (\r\n            <div>\r\n                {/* <SortedIssues sortedIssuesFunc={this.sortedIssuesFunc} /> */}\r\n                {template}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport HomePage from \"./pages/HomePage\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport VaadNavbar from \"./components/VaadNavbar\"\nimport { Container } from 'react-bootstrap';\nimport Dashboard from './pages/Dashboard';\nimport jsonData from './data/users.json';\nimport issuesData from './data/issues.json';\nimport messagesData from './data/messages.json';\n\nclass App extends React.Component{\n      constructor(props) {\n        super(props);\n        this.state = {\n          allUsers: jsonData,\n          activeUser: null, \n          allIssues: issuesData,\n          allMessages: messagesData,\n        }\n      }\n\n      // componentDidMount() {\n      // fetch('/data/users.json')\n      // .then(responseData => responseData.json())\n      // .then(data => {\n      //     this.setState({\n      //       allUsers: data\n      //     }\n\n      //     )\n        \n      // })\n      // .catch( (error) =>  {alert('the AJAX call failed')\n      //     console.log(error)\n      // }\n      // )\n        \n      // }\n      \n      \n\n      addUser = (newUser) =>{\n   \n        this.setState({\n          activeUser: newUser,\n          allUsers: this.state.allUsers.concat(newUser),\n            \n        })\n      }\n  \n      \n      login = (userObj) => {\n        this.setState({\n          activeUser: userObj\n        });\n      }\n      logout = () => {\n        this.setState({\n          activeUser: null,\n        })\n      }\n\n\n      // newIssue is new object, index is the place\n      addIssue = (newIssue, index) => {\n        if ( typeof index === \"undefined\" ){\n          index = -1;\n        }\n        console.log(\"addIssue\", index);\n        if(index > -1) {\n          this.setState({\n            allIssues: this.state.allIssues.map((issue, rowIndex) => {\n              if (rowIndex === index) {\n                return newIssue;\n              } \n              else {\n                return issue;\n              } \n            })\n          });\n        } else {\n          console.log(this.state.allIssues, newIssue);\n          this.setState({\n            allIssues: this.state.allIssues.concat(newIssue)\n          });  \n        }\n      }\n      removeIssue = (index) =>  {\n        this.setState({\n          // index from  removeIssue in  tenantDashbord.js .  will filter the issue we want to remove by index received. filter( (v, i)  -v- is for first parameter and i for index. have to write first param for second param to be the index of filter array\n          allIssues: this.state.allIssues.filter( (v, i) => { return i !== index; })\n        });\n      }\n\n      addMessage = (newMessage, index) => {\n        if ( typeof index === \"undefined\" ){\n          index = -1;\n        }\n        if(index > -1) {\n          this.setState({\n            allMessages: this.state.allMessages.map((message, rowIndex) => {\n              if (rowIndex === index) {\n                return newMessage;\n              } \n              else {\n                return message;\n              } \n            })\n          });\n        } else {\n          this.setState({\n            allMessages: this.state.allMessages.concat(newMessage)\n          });  \n        }\n      }\n      removeMessage = (index) => {\n        this.setState({\n          // index from  removeIssue in  tenantDashbord.js .  will filter the issue we want to remove by index received. filter( (v, i)  -v- is for first parameter and i for index. have to write first param for second param to be the index of filter array\n          allMessages: this.state.allMessages.filter( (v, i) => { return i !== index; })\n        });\n      }\n      addCommitteeMemberComment = (comment, indexOfComment) =>{\n          if (typeof indexOfComment === \"undefined\") {\n            indexOfComment = -1;\n          }\n          if(indexOfComment > -1)\n          this.setState({\n              allIssues: this.state.allIssues.concat(comment)\n          })\n      } \n\n      // sortIssue = (sortedIssuesArrObj) =>{\n\n      // }\n\n      render(){\n            return (\n              <HashRouter>\n                      <Route exact path={['/', '/login', '/Signup','/dashboard']}>\n                          <VaadNavbar\n                          activeUser={this.state.activeUser}\n                          logout={this.logout}\n                          ></VaadNavbar>\n                      </Route>\n                      <Container>\n                         <Route exact path=\"/\">\n                          <HomePage>\n\n                          </HomePage>\n                        </Route>\n                        <Route exact path=\"/Signup\">\n                          <Signup\n                            allUsers={this.state.allUsers}\n                            addUser={this.addUser}\n                          ></Signup>\n                        </Route>\n                        {/* <Route exact path=\"/message\">\n                          <MessagePage>\n\n                          </MessagePage>\n                        </Route> */}\n                           <Route exact path=\"/dashboard\">\n\n                          <Dashboard \n                          activeUser={this.state.activeUser}\n                          allIssues={this.state.allIssues}\n                          // addIssue={(issue) => { this.addIssue(issue); }}\n                          addIssue={this.addIssue}\n                          removeIssue={this.removeIssue}\n                          allMessages={this.state.allMessages} \n                          addMessage={this.addMessage}\n                          removeMessage={this.removeMessage}\n                          >\n                          </Dashboard>\n                        </Route>\n                        <Route exact path=\"/login\">\n                            <Login\n                            login={this.login}\n                            allUsers={this.state.allUsers}\n                            ></Login>\n                        </Route>\n                      </Container>\n               </HashRouter>\n                   );\n      }\n}     \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}